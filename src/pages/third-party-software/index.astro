---
/*
 * Copyright (c) 2023 by MILOSZ GILGA <https://miloszgilga.pl>
 * Silesian University of Technology
 *
 *   File name: index.astro
 *   Created at: 2023-08-12, 14:54:37
 *   Last updated at: 2023-08-12, 14:54:37
 *
 *   Project name: moonsphere
 *   Module name: moonsphere-landing-page
 *
 * This project is a part of "MoonSphere" instant messenger system. This system is a part of
 * completing an engineers degree in computer science at Silesian University of Technology.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 *
 *   <http://www.apache.org/license/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the license.
 */
import axios from 'axios';
import InteractiveLibraries from '~/ax-csr/components/InteractiveLibraries';
import { PageHeaderVariant } from '~/ax-ssr/components/Header.astro';
import { environment } from '~/env/environment';
import { useTranslationsSSR } from '~/i18n/translations';
import { i18nClientHref, i18nHref } from '~/i18n/url-parser';
import { getSafetyLocaleSSR } from '~/i18n/utils';
import MainLayout from '~/layouts/main-layout.astro';

type LibraryData = {
  name: string;
  repoUrl: string;
};

const { lang, locale } = getSafetyLocaleSSR(Astro.url);
const t = useTranslationsSSR('msph.landingPage.thirdPartySoftware.pageContent');

const { clientBaseUrl, contentDistributorBaseXHR: cdnBaseXHR } = environment;

const { data: libsData } = await axios.get(
  `${cdnBaseXHR}/static/misc/libraries.json`
);

const headerContent = `${t('totalLibraries').replace(
  '{libsCount}',
  libsData.length
)}`;

const headerVariant: PageHeaderVariant = {};
---

<MainLayout i18nPageId="thirdPartySoftware" headerVariant={headerVariant}>
  <div slot="headerContent">
    <h1 class="msph-root-header">
      {t('header')}
    </h1>
    <p class="mb-3">
      {t('paragraph1')}{' '}
      <a href={i18nHref('/licenses', lang)} class="msph-primary-href"
        >{t('belowLink')}</a
      >.
    </p>
    <p class="mb-3">
      {t('paragraph2')}{' '}
      <a href={i18nHref('/about', lang)} class="msph-primary-href"
        >{t('belowLink')}</a
      >.
    </p>
  </div>
  <div slot="mainContent">
    <section class="bg-gray-950 text-white overflow-hidden">
      <div class="msph_ratio-container px-3 h-[800px] overflow-hidden">
        <InteractiveLibraries client:load headerContent={headerContent}>
          {
            libsData.map(({ name, repoUrl }: LibraryData) => (
              <li class="flex sm:odd:justify-end sm:even:justify-start">
                <a
                  href={repoUrl}
                  title={name}
                  target="_blank"
                  rel="noreferrer"
                  class="truncate hover:text-gray-300 text-xl">
                  {name}
                </a>
              </li>
            ))
          }
        </InteractiveLibraries>
      </div>
    </section>
    <section class="msph_ratio-container my-10 sm:my-20 px-3">
      <p class="text-2xl md:text-3xl font-extrabold text-center mb-7">
        {t('areYouLost')}
      </p>
      <div
        class="flex flex-col gap-y-2 sm:gap-y-0 sm:flex-row justify-center gap-x-4">
        <a href={i18nHref('/download', lang)} class="msph-download-app-button">
          {t('downloadApp')}</a
        >
        <a
          href={i18nClientHref(clientBaseUrl!, locale)}
          class="msph-open-app-in-browser-button">
          {t('openAppInBrowser')}</a
        >
      </div>
    </section>
  </div>
</MainLayout>
