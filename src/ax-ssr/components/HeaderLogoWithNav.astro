---
/*
 * Copyright (c) 2023 by MoonSphere Systems
 * Originally developed by Mi≈Çosz Gilga <https://miloszgilga.pl>
 */
import { environment } from '~/env/environment';
import { useTranslationsSSR } from '~/i18n/translations';
import { i18nClientHref, i18nHref } from '~/i18n/url-parser';
import { getSafetyLocaleSSR } from '~/i18n/utils';
import LangPicker from './LangPicker.astro';
import { PageHeaderButon } from './Header.astro';
import MobileNav from '~/ax-csr/components/MobileNav';

type Props = {
  foreground?: string;
  signInButton?: PageHeaderButon;
  signUpButton?: PageHeaderButon;
  openAppButton?: PageHeaderButon;
  langPickedTheme?: 'light' | 'dark';
  fontWeight?: 'font-light' | 'font-medium';
};

type HeaderLink = {
  link: string;
  translation: string;
};

const {
  foreground = 'text-msph-dark-900',
  signInButton,
  signUpButton,
  openAppButton,
  langPickedTheme = 'light',
  fontWeight = 'font-medium',
} = Astro.props as Props;

const { lang, locale } = getSafetyLocaleSSR(Astro.url);
const t = useTranslationsSSR('msph.webCommon.footer');

const { contentDistributorBaseUrl: cdnUrl } = environment;

const headerLinks: HeaderLink[] = [
  'about',
  'download',
  'brand',
  'tutorial',
  'status',
].map(link => ({
  link,
  translation: t(`headers.application.links.${link}`),
}));

const { clientBaseUrl } = environment;
const logoImagePath = `${cdnUrl}/static/logo/moonsphere-orange-variant-1.svg`;
---

<div class="flex justify-between items-center w-full">
  <div class:list={['flex gap-10 items-center', foreground]}>
    <a href={i18nHref('/', lang)} class="flex gap-2">
      <img src={logoImagePath} alt="" width={30} height={30} />
      <h1 class="font-logo text-2xl font-medium leading-[28px]">MoonSphere</h1>
    </a>
    <ul class="flex gap-4 hidden md:flex">
      {
        headerLinks.map(({ link, translation }) => (
          <li>
            <a
              href={i18nHref(`/${link}`, lang)}
              class:list={['hover:underline block', fontWeight]}>
              {translation}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
  <div class="flex gap-3 items-center">
    <div class:list={['hidden lg:flex gap-4', foreground]}>
      <div class="flex gap-x-2">
        <a
          href={i18nClientHref(`${clientBaseUrl}/auth/login`, locale)}
          class:list={[
            'hidden xl:block msph-slide-nav__button',
            signInButton?.bg || 'bg-msph-tint-500',
            signInButton?.fg || 'text-msph-light-100',
            signInButton?.border || 'border-msph-tint-500',
          ]}>
          {t(`headers.start.links.login`)}
        </a>
        <a
          href={i18nClientHref(`${clientBaseUrl}/auth/register`, locale)}
          class:list={[
            'msph-slide-nav__button--outline',
            signUpButton?.bg || 'bg-transparent',
            signUpButton?.fg || 'text-msph-tint-500',
            signUpButton?.border || 'border-msph-tint-500',
          ]}>
          {t(`headers.start.links.register`)}
        </a>
      </div>
      <div class="flex gap-x-2">
        <a
          href={i18nClientHref(clientBaseUrl!, locale)}
          class:list={[
            'msph-slide-nav__button msph-slide-nav__button--inverse',
            openAppButton?.bg || 'bg-msph-dark-900',
            openAppButton?.fg || 'text-msph-light-100',
            openAppButton?.border || 'border-msph-dark-900',
          ]}>
          {t(`openAppButton`)}
        </a>
        <LangPicker
          theme={langPickedTheme}
          hideLabels={true}
          position="bottom"
        />
      </div>
    </div>
    <slot />
    <div class:list={['block sm:hidden', foreground]}>
      <LangPicker theme={langPickedTheme} hideLabels={true} position="bottom" />
    </div>
    <MobileNav client:load lang={lang} foreground={foreground}>
      <ul class="flex-grow flex flex-col gap-y-3 mt-5">
        {
          headerLinks.map(({ link, translation }) => (
            <li class="flex">
              <a
                href={i18nHref(`/${link}`, lang)}
                class="msph-button shadow-none bg-msph-tint-100 hover:bg-msph-tint-200 w-full py-3 px-5 text-xl">
                {translation}
              </a>
            </li>
          ))
        }
      </ul>
      <div class="grid grid-cols-12 gap-3">
        <a
          href={i18nClientHref(`${clientBaseUrl}/auth/login`, locale)}
          class="msph-mobile-nav__button sm:col-span-6">
          {t(`headers.start.links.login`)}
        </a>
        <a
          href={i18nClientHref(`${clientBaseUrl}/auth/register`, locale)}
          class="msph-mobile-nav__button--outline sm:col-span-6">
          {t(`headers.start.links.register`)}
        </a>
        <a
          href={i18nClientHref(clientBaseUrl!, locale)}
          class="msph-mobile-nav__button border-msph-dark-900 bg-msph-dark-900 text-msph-light-100">
          {t(`openAppButton`)}
        </a>
      </div>
    </MobileNav>
  </div>
</div>
