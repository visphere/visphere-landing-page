---
/*
 * Copyright (c) 2023 by MoonSphere Systems
 * Originally developed by Milosz Gilga <https://miloszgilga.pl>
 */
import ChangeLang from '~/ax-csr/components/ChangeLang';
import { environment } from '~/env/environment';
import { i18nWithoutLangPrefixHref } from '~/i18n/url-parser';
import { getSafetyLocaleSSR } from '~/i18n/utils';

type Props = {
  theme?: 'light' | 'dark';
  hideLabels?: boolean;
  position?: 'top' | 'bottom';
};

const {
  theme = 'dark',
  hideLabels = false,
  position = 'top',
} = Astro.props as Props;

const locale = getSafetyLocaleSSR(Astro.url);
const { contentDistributorBaseUrl: cdnUrl, i18nLocalesMap } = environment;
---

<ChangeLang
  client:load
  currentLocale={locale}
  hideLabels={hideLabels}
  theme={theme}
  position={position}>
  {
    i18nLocalesMap.map(({ id, name, value }) => (
      <li>
        <a
          href={i18nWithoutLangPrefixHref(Astro.url.pathname, id)}
          class:list={[
            'msph_footer__select-list-element',
            theme === 'dark' ? 'hover:bg-gray-600' : 'hover:bg-gray-200',
            value === locale.locale &&
              'msph_footer__select-list-element--active',
          ]}>
          <img
            src={`${cdnUrl}/static/icon/lang/${value}.png`}
            width="23"
            height="23"
            class="me-2"
            alt=""
          />
          <p>{name}</p>
        </a>
      </li>
    ))
  }
</ChangeLang>
